{ config, pkgs, ... }:

{
  home.file = {
    ".config/matugen/config.toml" = {
      text = ''
        #  ┳┳┓┏┓┏┳┓┳┳┏┓┏┓┳┓
        #  ┃┃┃┣┫ ┃ ┃┃┃┓┣ ┃┃
        #  ┛ ┗┛┗ ┻ ┗┛┗┛┗┛┛┗
        #                  

        # Global Configs
        [config]
        version_check = true

        # Templates

        # Hyprland
        [templates.hyprland]
        input_path = '~/.config/matugen/templates/matugen-hyprland.conf'
        output_path = '~/.config/hypr/matugen/matugen-hyprland.conf'

        # Hyprlock
        [templates.hyprlock]
        input_path = '~/.config/matugen/templates/matugen-hyprlock.conf'
        output_path = '~/.config/hypr/hyprlock/matugen/matugen-hyprlock.conf'

        # Waybar
        [templates.waybar]
        input_path = '~/.config/matugen/templates/matugen-waybar.css'
        output_path = '~/.config/waybar/matugen/matugen-waybar.css'
        post_hook = 'pkill -SIGUSR2 waybar'

        # Swaync
        [templates.swaync]
        input_path = '~/.config/matugen/templates/matugen-swaync.css'
        output_path = '~/.config/swaync/matugen/matugen-swaync.css'
        post_hook = 'swaync-client -rs'

        # Rofi
        [templates.rofi]
        input_path = '~/.config/matugen/templates/matugen-rofi.rasi'
        output_path = '~/.config/rofi/matugen/matugen-rofi.rasi'

        # Gtk3
        [templates.gtk3]
        input_path = '~/.config/matugen/templates/matugen-gtk.css'
        output_path = '~/.config/gtk-3.0/gtk.css'

        # GTk4
        [templates.gtk4]
        input_path = '~/.config/matugen/templates/matugen-gtk.css'
        output_path = '~/.config/gtk-4.0/gtk.css'

        # Qt5
        [templates.qt5]
        input_path = '~/.config/matugen/templates/qtct-colors.conf'
        output_path = '~/.config/qt5ct/colors/matugen-qt5ct.conf'

        # Qt6
        [templates.qt6]
        input_path = '~/.config/matugen/templates/qtct-colors.conf'
        output_path = '~/.config/qt6ct/colors/matugen-qt6ct.conf'
      '';
    };

    # Template files
    ".config/matugen/templates/matugen-hyprland.conf" = {
      text = ''
        # Hyprland colors generated by matugen
        $accent = {accent}
        $accentAlpha = {accentAlpha}
        $bg = {bg}
        $bgAlpha = {bgAlpha}
        $fg = {fg}
        $fgAlpha = {fgAlpha}
        $surface = {surface}
        $surfaceAlpha = {surfaceAlpha}
        $primary = {primary}
        $primaryAlpha = {primaryAlpha}
        $secondary = {secondary}
        $secondaryAlpha = {secondaryAlpha}
        $tertiary = {tertiary}
        $tertiaryAlpha = {tertiaryAlpha}
        $error = {error}
        $errorAlpha = {errorAlpha}
      '';
    };

    ".config/matugen/templates/matugen-hyprlock.conf" = {
      text = ''
        # Hyprlock colors generated by matugen
        $accent = {accent}
        $accentAlpha = {accentAlpha}
        $bg = {bg}
        $bgAlpha = {bgAlpha}
        $fg = {fg}
        $fgAlpha = {fgAlpha}
        $surface = {surface}
        $surfaceAlpha = {surfaceAlpha}
        $primary = {primary}
        $primaryAlpha = {primaryAlpha}
        $secondary = {secondary}
        $secondaryAlpha = {secondaryAlpha}
        $tertiary = {tertiary}
        $tertiaryAlpha = {tertiaryAlpha}
        $error = {error}
        $errorAlpha = {errorAlpha}
      '';
    };

    ".config/matugen/templates/matugen-waybar.css" = {
      text = ''
        /* Waybar colors generated by matugen */
        @define-color accent {accent};
        @define-color accentAlpha {accentAlpha};
        @define-color bg {bg};
        @define-color bgAlpha {bgAlpha};
        @define-color fg {fg};
        @define-color fgAlpha {fgAlpha};
        @define-color surface {surface};
        @define-color surfaceAlpha {surfaceAlpha};
        @define-color primary {primary};
        @define-color primaryAlpha {primaryAlpha};
        @define-color secondary {secondary};
        @define-color secondaryAlpha {secondaryAlpha};
        @define-color tertiary {tertiary};
        @define-color tertiaryAlpha {tertiaryAlpha};
        @define-color error {error};
        @define-color errorAlpha {errorAlpha};
      '';
    };

    ".config/matugen/templates/matugen-swaync.css" = {
      text = ''
        /* Swaync colors generated by matugen */
        @define-color accent {accent};
        @define-color accentAlpha {accentAlpha};
        @define-color bg {bg};
        @define-color bgAlpha {bgAlpha};
        @define-color fg {fg};
        @define-color fgAlpha {fgAlpha};
        @define-color surface {surface};
        @define-color surfaceAlpha {surfaceAlpha};
        @define-color primary {primary};
        @define-color primaryAlpha {primaryAlpha};
        @define-color secondary {secondary};
        @define-color secondaryAlpha {secondaryAlpha};
        @define-color tertiary {tertiary};
        @define-color tertiaryAlpha {tertiaryAlpha};
        @define-color error {error};
        @define-color errorAlpha {errorAlpha};
      '';
    };

    ".config/matugen/templates/matugen-rofi.rasi" = {
      text = ''
        /* Rofi colors generated by matugen */
        * {
            accent: {accent};
            accentAlpha: {accentAlpha};
            bg: {bg};
            bgAlpha: {bgAlpha};
            fg: {fg};
            fgAlpha: {fgAlpha};
            surface: {surface};
            surfaceAlpha: {surfaceAlpha};
            primary: {primary};
            primaryAlpha: {primaryAlpha};
            secondary: {secondary};
            secondaryAlpha: {secondaryAlpha};
            tertiary: {tertiary};
            tertiaryAlpha: {tertiaryAlpha};
            error: {error};
            errorAlpha: {errorAlpha};
        }
      '';
    };

    ".config/matugen/templates/matugen-gtk.css" = {
      text = ''
        /* GTK colors generated by matugen */
        @define-color accent {accent};
        @define-color accentAlpha {accentAlpha};
        @define-color bg {bg};
        @define-color bgAlpha {bgAlpha};
        @define-color fg {fg};
        @define-color fgAlpha {fgAlpha};
        @define-color surface {surface};
        @define-color surfaceAlpha {surfaceAlpha};
        @define-color primary {primary};
        @define-color primaryAlpha {primaryAlpha};
        @define-color secondary {secondary};
        @define-color secondaryAlpha {secondaryAlpha};
        @define-color tertiary {tertiary};
        @define-color tertiaryAlpha {tertiaryAlpha};
        @define-color error {error};
        @define-color errorAlpha {errorAlpha};
      '';
    };

    ".config/matugen/templates/qtct-colors.conf" = {
      text = ''
        # Qt colors generated by matugen
        [Colors:Dark]
        accent={accent}
        accentAlpha={accentAlpha}
        bg={bg}
        bgAlpha={bgAlpha}
        fg={fg}
        fgAlpha={fgAlpha}
        surface={surface}
        surfaceAlpha={surfaceAlpha}
        primary={primary}
        primaryAlpha={primaryAlpha}
        secondary={secondary}
        secondaryAlpha={secondaryAlpha}
        tertiary={tertiary}
        tertiaryAlpha={tertiaryAlpha}
        error={error}
        errorAlpha={errorAlpha}
      '';
    };
  };

  # Create necessary directories for templates
  home.activation = {
    createMatugenDirs = lib.hm.dag.entryAfter ["writeBoundary"] ''
      $DRY_RUN_CMD mkdir -p $VERBOSE_ARG ~/.config/matugen/templates
      $DRY_RUN_CMD mkdir -p $VERBOSE_ARG ~/.config/hypr/matugen
      $DRY_RUN_CMD mkdir -p $VERBOSE_ARG ~/.config/hypr/hyprlock/matugen
      $DRY_RUN_CMD mkdir -p $VERBOSE_ARG ~/.config/waybar/matugen
      $DRY_RUN_CMD mkdir -p $VERBOSE_ARG ~/.config/swaync/matugen
      $DRY_RUN_CMD mkdir -p $VERBOSE_ARG ~/.config/rofi/matugen
      $DRY_RUN_CMD mkdir -p $VERBOSE_ARG ~/.config/qt5ct/colors
      $DRY_RUN_CMD mkdir -p $VERBOSE_ARG ~/.config/qt6ct/colors
    '';
  };

  # Create a simple script to update themes
  home.file.".local/bin/update-theme" = {
    executable = true;
    text = ''
      #!/usr/bin/env bash
      
      # Set the wallpaper path (default or from argument)
      WALLPAPER="$1"
      
      if [ -z "$WALLPAPER" ]; then
        echo "Usage: update-theme /path/to/wallpaper.jpg"
        exit 1
      fi
      
      # Generate color schemes with matugen
      matugen generate "$WALLPAPER"
      
      # Reload configurations as needed
      if command -v hyprctl &> /dev/null; then
        hyprctl reload
      fi
    '';
  };
}
